using TestLibrary;

namespace GeneratedTests
{
    public class AutoGeneratedTests
    {
        public void Test_Test1_Add_Int32_Int32()
        {
            var instance = new TestLibrary.Test1();
            instance.Add(0, 0);
        }

        public void Test_Test1_Divide_Double_Double()
        {
            var instance = new TestLibrary.Test1();
            instance.Divide(0.0, 0.0);
        }

        public void Test_Test1_Echo_String()
        {
            var instance = new TestLibrary.Test1();
            instance.Echo("test");
        }

        public void Test_Test1_PrintHello()
        {
            TestLibrary.Test1.PrintHello();
        }

        public void Test_Test1_Hidden()
        {
            var instance = new TestLibrary.Test1();
            instance.Hidden();
        }

        public void Test_Test2_ReturnString()
        {
            var instance = new TestLibrary.Test2();
            instance.ReturnString();
        }

        public void Test_Test2_RaiseEvent()
        {
            var instance = new TestLibrary.Test2();
            instance.RaiseEvent();
        }

        public void Test_Test3_Overload()
        {
            var instance = new TestLibrary.Test3();
            instance.Overload();
        }

        public void Test_Test3_Overload_Int32()
        {
            var instance = new TestLibrary.Test3();
            instance.Overload(0);
        }

        public void Test_Test3_Overload_String()
        {
            var instance = new TestLibrary.Test3();
            instance.Overload("test");
        }

        public void Test_Test3_Identity_T()
        {
            var instance = new TestLibrary.Test3();
            instance.Identity(null);
        }

        public void Test_Test4_StaticMethod()
        {
            TestLibrary.Test4.StaticMethod();
        }

        public void Test_Test7Impl_InterfaceMethod()
        {
            var instance = new TestLibrary.Test7Impl();
            instance.InterfaceMethod();
        }

        public void Test_Test8Derived_AbstractMethod()
        {
            var instance = new TestLibrary.Test8Derived();
            instance.AbstractMethod();
        }

        public void Test_Test8Derived_VirtualMethod()
        {
            var instance = new TestLibrary.Test8Derived();
            instance.VirtualMethod();
        }

    }
}
